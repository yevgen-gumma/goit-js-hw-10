{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Підключаємо CSS код бібліотеки в проєкт\n// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst myInput = document.getElementById('datetime-picker');\n// const startBtn = document.getElementById('start-btn');\n\nlet userSelectedDate;\nlet timerInterval;\n\n// Ініціалізація бібліотеки (вставка коду ф-ції бібліотеки в наш код js)\n// 1й аргумент ф-ції - це id елемента, на якому ініціалізується бібліотека\n// 2й аргумент ф-ції - об'єкт параметрів Options з документації для формування\n// певного способу відображення на сторінці з додаванням if для викоання певної задачі\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    const currentDate = new Date();\n    const startBtn = document.getElementById('start-btn');\n\n    if (selectedDate < currentDate) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        messageColor: 'white',\n        backgroundColor: '#EF4040',\n        position: 'topCenter',\n        messageSize: '16px',\n        timeout: 3000,\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDate;\n      // // Виклик функції оновлення таймера\n      // updateTimer();\n      // // Запуск таймера кожну секунду\n      // timerInterval = setInterval(updateTimer, 1000);\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nconst startBtn = document.getElementById('start-btn');\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  userSelectedDate = new Date(myInput.value);\n  timerInterval = setInterval(updateTimer, 1000);\n  updateTimer();\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction displayTimer({ days, hours, minutes, seconds }) {\n  const daysElement = document.querySelector('[data-days]');\n  const hoursElement = document.querySelector('[data-hours]');\n  const minutesElement = document.querySelector('[data-minutes]');\n  const secondsElement = document.querySelector('[data-seconds]');\n\n  daysElement.textContent = formatTimeValue(days);\n  hoursElement.textContent = formatTimeValue(hours);\n  minutesElement.textContent = formatTimeValue(minutes);\n  secondsElement.textContent = formatTimeValue(seconds);\n}\n\nfunction updateTimer() {\n  const currentTime = new Date();\n  const timeDifference = userSelectedDate - currentTime;\n\n  if (timeDifference <= 0) {\n    // Зупинка таймера, якщо час вичерпано\n    clearInterval(timerInterval);\n    displayTimer({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n  } else {\n    const timeValues = convertMs(timeDifference);\n    displayTimer(timeValues);\n  }\n}\n\nfunction formatTimeValue(value) {\n  return value < 10 ? `0${value}` : value;\n}\n\n// // ф-ція, яка додає ведучий нуль до чисел, що складаються з однієї цифри:\n// function addLeadingZero(value) {\n//   return value.toString().padStart(2, '0');\n// }\n"],"names":["myInput","userSelectedDate","timerInterval","options","selectedDates","selectedDate","currentDate","startBtn","iziToast","flatpickr","updateTimer","convertMs","ms","days","hours","minutes","seconds","displayTimer","daysElement","hoursElement","minutesElement","secondsElement","formatTimeValue","currentTime","timeDifference","timeValues","value"],"mappings":"2GAQA,MAAMA,EAAU,SAAS,eAAe,iBAAiB,EAGzD,IAAIC,EACAC,EAMJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,GAC7BE,EAAc,IAAI,KAClBC,EAAW,SAAS,eAAe,WAAW,EAEhDF,EAAeC,GACjBE,EAAS,MAAM,CACb,QAAS,qCACT,aAAc,QACd,gBAAiB,UACjB,SAAU,YACV,YAAa,OACb,QAAS,GACjB,CAAO,EACDD,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBN,EAAmBI,EAMtB,CACH,EAEAI,EAAU,mBAAoBN,CAAO,EAErC,MAAMI,EAAW,SAAS,eAAe,WAAW,EAEpDA,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBN,EAAmB,IAAI,KAAKD,EAAQ,KAAK,EACzCE,EAAgB,YAAYQ,EAAa,GAAI,EAC7CA,GACF,CAAC,EAED,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAa,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACvD,MAAME,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9DH,EAAY,YAAcI,EAAgBT,CAAI,EAC9CM,EAAa,YAAcG,EAAgBR,CAAK,EAChDM,EAAe,YAAcE,EAAgBP,CAAO,EACpDM,EAAe,YAAcC,EAAgBN,CAAO,CACtD,CAEA,SAASN,GAAc,CACrB,MAAMa,EAAc,IAAI,KAClBC,EAAiBvB,EAAmBsB,EAE1C,GAAIC,GAAkB,EAEpB,cAActB,CAAa,EAC3Be,EAAa,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,MACrD,CACL,MAAMQ,EAAad,EAAUa,CAAc,EAC3CP,EAAaQ,CAAU,CACxB,CACH,CAEA,SAASH,EAAgBI,EAAO,CAC9B,OAAOA,EAAQ,GAAK,IAAIA,IAAUA,CACpC"}